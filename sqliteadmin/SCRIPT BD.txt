CREATE TABLE `almacenamiento` (
`ID_ALMACENAMIENTO` INTEGER PRIMARY KEY NOT NULL,
`FECHA_ALMACENAMIENTO` date NOT NULL,
`ID_FILA` INTEGER KEY  NOT NULL,
`ID_REACTIVO` INTEGER KEY  NOT NULL,
`CANTIDAD` INTEGER NOT NULL,
CONSTRAINT `almacenamiento_ibfk_1` FOREIGN KEY (`ID_FILA`) REFERENCES `fila` (`ID_FILA`) ON DELETE CASCADE ON UPDATE CASCADE
CONSTRAINT `almacenamiento_ibfk_2` FOREIGN KEY (`ID_REACTIVO`) REFERENCES `reactivo` (`ID_REACTIVO`) ON DELETE CASCADE ON UPDATE CASCADE

);

CREATE TABLE `cat_peligro` (
`ID_CAT_PELIGRO` INTEGER PRIMARY KEY NOT NULL,
`CAT_PELIGRO` TEXT NOT NULL,
`ID_PICTOGRAMA` INTEGER KEY NOT NULL,
`PALABRA_ADVERTENCIA` TEXT NOT NULL,
`INDICACION_PELIGRO` TEXT NOT NULL,
`ID_CLASIFICACION` INTEGER KEY NOT NULL,
 CONSTRAINT `cat_peligro_ibfk_1` FOREIGN KEY (`ID_CLASIFICACION`) REFERENCES `clasificacion` (`ID_CLASIFICACION`) ON DELETE CASCADE ON UPDATE CASCADE
  CONSTRAINT `cat_peligro_ibfk_2` FOREIGN KEY (`ID_PICTOGRAMA`) REFERENCES `pictogramas` (`ID_PICTOGRAMA`) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE `clasificacion` (
`ID_CLASIFICACION` INTEGER PRIMARY KEY NOT NULL,
`CLASE_PELIGRO` TEXT NOT NULL,
`ID_GRUPO_SGA` INTEGER KEY NOT NULL,
CONSTRAINT `clasificacion_ibfk_1` FOREIGN KEY (`ID_GRUPO_SGA`) REFERENCES `sga` (`ID_GRUPO_SGA`) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE `compatibilidades` (
`ID_COMPATIBILIDAD` INTEGER PRIMARY KEY NOT NULL,
`ID_PICTOGRAMA` INTEGER KEY NOT NULL,
`ID_PICTOGRAMA2` INTEGER KEY NOT NULL,
`DEF_COMP` TEXT NOT NULL,
CONSTRAINT `compatibilidades_ibfk_1` FOREIGN KEY (`ID_PICTOGRAMA`) REFERENCES `pictogramas` (`ID_PICTOGRAMA`) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE `estante` (
`ID_ESTANTE` INTEGER PRIMARY KEY NOT NULL,
`DESCRIPCION` TEXT NOT NULL
);

CREATE TABLE `fabricante` (
`ID_FABRICANTE` INTEGER PRIMARY KEY NOT NULL,
`NOMBRE_FAB` TEXT NOT NULL
);

CREATE TABLE `fila` (
`ID_FILA` INTEGER PRIMARY KEY  NOT NULL,
`DESCRIPCION` TEXT NOT NULL,
`ID_ESTANTE` INTEGER KEY NOT NULL,
CONSTRAINT `fila_ibfk_1` FOREIGN KEY (`ID_ESTANTE`) REFERENCES `estante` (`ID_ESTANTE`) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE `movimientos` (
`ID_MOVIMIENTOS` INTEGER PRIMARY KEY NOT NULL,
`TIPO_MOVIMIENTO` TEXT NOT NULL,
`FECHA_MOV` date NOT NULL,
`ID_ALMACENAMIENTO` INTEGER KEY NOT NULL,
`ID_USUARIO` INTEGER KEY NOT NULL,
`CANTIDAD` INTEGER NOT NULL,
`RESPONSABLE` TEXT NOT NULL,
CONSTRAINT `movimientos_ibfk_1` FOREIGN KEY (`ID_USUARIO`) REFERENCES `usuario` (`ID_USUARIO`) ON DELETE CASCADE ON UPDATE CASCADE,
 CONSTRAINT `movimientos_ibfk_2` FOREIGN KEY (`ID_ALMACENAMIENTO`) REFERENCES `almacenamiento` (`ID_ALMACENAMIENTO`) ON DELETE CASCADE ON UPDATE CASCADE
 
);

CREATE TABLE `pictogramas` (
`ID_PICTOGRAMA` INTEGER PRIMARY KEY NOT NULL,
`IMAGEN` longblob NOT NULL,
`DESCRIPCION` TEXT NOT NULL
);

CREATE TABLE `react_peligro` (
`ID_REACT_PELIGRO` INTEGER PRIMARY KEY NOT NULL,
`ID_CAT_PELIGRO` INTEGER KEY NOT NULL,
`ID_REACTIVO` INTEGER  KEY NOT NULL,
CONSTRAINT `react_peligro_ibfk_1` FOREIGN KEY (`ID_CAT_PELIGRO`) REFERENCES `cat_peligro` (`ID_CAT_PELIGRO`) ON DELETE CASCADE ON UPDATE CASCADE
CONSTRAINT `react_peligro_ibfk_2` FOREIGN KEY (`ID_REACTIVO`) REFERENCES `reactivo` (`ID_REACTIVO`) ON DELETE CASCADE ON UPDATE CASCADE

);

CREATE TABLE `reactivo` (
`ID_REACTIVO` INTEGER PRIMARY KEY NOT NULL,
`NOMBRE_REAC` TEXT NOT NULL,
`COD_CAS` TEXT NOT NULL,
`ADVERTENCIA` TEXT NOT NULL,
`PRI_AUXILIO` TEXT NOT NULL,
`ESTADO` TEXT NOT NULL,
`UNIDAD_MEDIDA` TEXT NOT NULL,
`FECHA_VENC` date NOT NULL,
`RETIQ` TEXT NOT NULL,
`FECHA_RETI` date,
`S_CONTROLADA` TEXT NOT NULL,
`FICHA_TEC`  TEXT NOT NULL,
`ID_FABRICANTE` INTEGER  KEY NOT NULL,
CONSTRAINT `reactivo_ibfk_1` FOREIGN KEY (`ID_FABRICANTE`) REFERENCES `fabricante` (`ID_FABRICANTE`) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE `sga` (
`ID_GRUPO_SGA` INTEGER  PRIMARY KEY NOT NULL,
`GRUPO_GENERAL` TEXT NOT NULL
);

CREATE TABLE [usuario] (
[ID_USUARIO] INTEGER PRIMARY KEY NOT NULL,
[NOMBRE] TEXT  NOT NULL,
[ROL] TEXT  NOT NULL,
[FOTO] longblob  NOT NULL,
[TELEFONO] TEXT  NOT NULL,
[EMAIL] TEXT  NOT NULL,
[USER] TEXT  NOT NULL,
[PWD] TEXT  NOT NULL
);
